.PHONY: start
start: erase build up composer-install db-init

.PHONY: restart
restart: stop up

.PHONY: up
up: ## Start environment
		docker-compose up -d

.PHONY: stop
stop: ## stop environment
		docker-compose stop

.PHONY: erase
erase: stop## Stop and delete containers, clean volumes.
		docker-compose rm -v -f

.PHONY: build
build: ## Build environment and initialize composer and project dependencies
		docker-compose build

.PHONY: composer-install
composer-install: ## Run composer install
		docker-compose exec app sh -lc 'composer install'

.PHONY: composer-optimize
composer-optimize: ## Run composer dump-autoload
		docker-compose exec app sh -lc 'composer dump-autoload --no-dev --classmap-authoritative'

.PHONY: db-reset
db-reset: ## Run migrations
		docker-compose exec app sh -lc 'php artisan migrate:reset'

.PHONY: db-migrate
db-migrate: ## Run migrations
		docker-compose exec app sh -lc 'php artisan migrate'

.PHONY: db-rollback
db-rollback: ## Run rollback migrations
		docker-compose exec app sh -lc 'php artisan migrate:rollback'

.PHONY: db-seed
db-seed: ## Run data seeding
		docker-compose exec app sh -lc 'php artisan db:seed'

.PHONY: db-init
db-init: db-reset db-migrate db-seed

.PHONY: queue-supervisor-restart
queue-supervisor-restart: ## Restart queue supervisor
		docker-compose exec queue sh -lc 'supervisorctl restart all'

.PHONY: env-vars
env-vars: ##Listing Environment Variables
		docker-compose exec app sh -lc 'php bin/console debug:container --env-vars'

.PHONY: cache-clear
cache-clear: ##Clear cache
		docker-compose exec app sh -lc 'php bin/console cache:clear'

.PHONY: show-routes
show-routes: ##Show routes list
		docker-compose exec app sh -lc 'php bin/console debug:router'

.PHONY: show-commands
show-commands: ##Show commands list
		docker-compose exec app sh -lc 'php bin/console list'

.PHONY: assets-install
assets-install: ##Install assets
		docker-compose exec app sh -lc 'php bin/console assets:install public'

.PHONY: parameters
parameters: ##Accessing Configuration Parameters
		docker-compose exec app sh -lc 'php bin/console debug:container --parameters'

.PHONY: phpunit
phpunit: ## execute project unit tests
		docker-compose exec app sh -lc './vendor/bin/phpunit'

.PHONY: logs
logs: ## Show docker-compose logs
		docker-compose logs -f

.PHONY: app
app: ## Go inside php container
		docker-compose exec app sh
